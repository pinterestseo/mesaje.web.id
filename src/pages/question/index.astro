---
import Layout from '../../layouts/Layout.astro';
import { questions } from '../../data/questions';

// Pagination Logic
const POSTS_PER_PAGE = 10;
const currentPage = 1;
const paginatedQuestions = questions.slice(0, POSTS_PER_PAGE);
const totalPages = Math.ceil(questions.length / POSTS_PER_PAGE);
  publishDate: "2024-12-09"
  draft: false
---

<Layout title="All Questions">
  <main>
    <header class="hero">
      <div class="container">
        <h1>Toate Mesajele</h1>
        <p class="subtitle">Răsfoiește colecția noastră cuprinzătoare de articole</p>
      </div>
    </header>

    <section class="questions container">
      <div class="question-grid">
        {paginatedQuestions.map(question => (
          <article class="question-card">
            <div class="question-content">
              <span class="category-label">{question.category}</span>
              <h3>
                <a href={`/question/${question.slug}`}>{question.title}</a>
              </h3>
              <p>{question.description}</p>
            </div>
          </article>
        ))}
      </div>

      <!-- Pagination Controls -->
      <nav class="pagination">
        <span class="page-info">
          Page {currentPage} of {totalPages}
        </span>
        
        {totalPages > 1 && (
          <a href="/question/page/2" class="page-link">
            Next →
          </a>
        )}
      </nav>
    </section>
  </main>
</Layout>

<style>
  .hero {
    background: linear-gradient(to right, #4a5568, #2d3748);
    color: white;
    padding: 4rem 0;
    text-align: center;
    margin-bottom: 3rem;
  }

  .hero h1 {
    font-size: 3rem;
    margin-bottom: 1rem;
  }

  .subtitle {
    font-size: 1.25rem;
    opacity: 0.9;
  }

  .container {
    max-width: 900px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .question-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
  }

  .question-card {
    background: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s;
  }

  .question-card:hover {
    transform: translateY(-4px);
  }

  .question-content {
    padding: 1.5rem;
  }

  .category-label {
    background: #e2e8f0;
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.875rem;
    color: #4a5568;
  }

  .question-content h3 {
    margin: 1rem 0;
    font-size: 1.25rem;
  }

  .question-content h3 a {
    color: #2d3748;
    text-decoration: none;
  }

  .question-content h3 a:hover {
    color: var(--color-primary);
  }

  .question-content p {
    color: #4a5568;
    font-size: 0.875rem;
    line-height: 1.5;
  }

  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    margin-top: 2rem;
    padding: 1rem 0;
  }

  .page-link {
    padding: 0.5rem 1rem;
    border: 1px solid #e2e8f0;
    border-radius: 4px;
    color: #4a5568;
    text-decoration: none;
    transition: all 0.2s;
  }

  .page-link:hover {
    background: #e2e8f0;
  }

  .page-info {
    color: #4a5568;
  }

  @media (max-width: 768px) {
    .hero {
      padding: 3rem 0;
    }

    .hero h1 {
      font-size: 2.5rem;
    }

    .question-grid {
      grid-template-columns: 1fr;
    }
  }
</style>